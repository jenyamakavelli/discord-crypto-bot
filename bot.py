import discord
from discord.ext import tasks
import aiohttp
import asyncio
import logging

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
DISCORD_TOKEN = "—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞"
BTC_CHANNEL_ID = int(os.getenv("BTC_CHANNEL_ID"))
ETH_CHANNEL_ID = int(os.getenv("ETH_CHANNEL_ID"))

intents = discord.Intents.default()
client = discord.Client(intents=intents)

logging.basicConfig(level=logging.INFO, format='%(asctime)s %(levelname)s %(message)s')

async def get_prices():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum&vs_currencies=usd"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status != 200:
                raise Exception(f"–û—à–∏–±–∫–∞ HTTP {resp.status} –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ü–µ–Ω")
            data = await resp.json()
            btc_price = data['bitcoin']['usd']
            eth_price = data['ethereum']['usd']
            return btc_price, eth_price

@tasks.loop(minutes=1)
async def update_prices():
    logging.info("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω")
    try:
        btc_price, eth_price = await get_prices()
        logging.info(f"üí∞ –ü–æ–ª—É—á–µ–Ω—ã —Ü–µ–Ω—ã BTC: {btc_price}, ETH: {eth_price}")

        btc_channel = client.get_channel(BTC_CHANNEL_ID)
        eth_channel = client.get_channel(ETH_CHANNEL_ID)

        if btc_channel:
            await btc_channel.edit(name=f"BTC: ${btc_price:,.2f}")
            logging.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è BTC –∫–∞–Ω–∞–ª–∞: BTC: ${btc_price:,.2f}")
        else:
            logging.warning("‚ö†Ô∏è BTC –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

        if eth_channel:
            await eth_channel.edit(name=f"ETH: ${eth_price:,.2f}")
            logging.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è ETH –∫–∞–Ω–∞–ª–∞: ETH: ${eth_price:,.2f}")
        else:
            logging.warning("‚ö†Ô∏è ETH –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

    except Exception as e:
        logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
    logging.info("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

@client.event
async def on_ready():
    logging.info(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {client.user}")
    if not update_prices.is_running():
        update_prices.start()
        logging.info("üü¢ –ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –∑–∞–ø—É—â–µ–Ω–∞")

if __name__ == "__main__":
    try:
        client.run(DISCORD_TOKEN)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
